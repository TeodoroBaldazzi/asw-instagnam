apiVersion: v1
kind: Namespace
metadata:
  name: asw-project
  labels:
    name: asw-project
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: api-gateway-deployment
  namespace: asw-project
  labels:
    app: instagnam
    service: api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: instagnam
      service: api-gateway
  template:
    metadata:
      labels:
        app: instagnam
        service: api-gateway
    spec:
      containers:
      - name: asw-api-gateway
        image: cmik/api-gateway:1.1.2
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: asw-project
spec:
  type: NodePort
  selector:
    app: instagnam
    service: api-gateway
  ports:
  - name: web-interface
    protocol: TCP
    port: 8080
    targetPort: 8080
  
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: instagnam
  namespace: asw-project
spec:
 rules:
 - host: instagnam
   http:
    paths:
    - path: /
      backend:
        serviceName: api-gateway-service
        servicePort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config-ricette-seguite
  namespace: asw-project
  labels:
    app: instagnam
    service: postgres-ricette-seguite
data:
  POSTGRES_DB: ricette-seguitedb
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config-ricette
  namespace: asw-project
  labels:
    app: instagnam
    service: postgres-ricette
data:
  POSTGRES_DB: ricettedb
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: asw-project
  labels:
    app: instagnam
    service: postgres-connessioni
data:
  POSTGRES_DB: connessionidb
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres-connessioni-deployment
  namespace: asw-project
  labels:
    app: instagnam
    service: postgres-connessioni
spec:
  replicas: 1
  selector:
    matchLabels:
      app: instagnam
      service: postgres-connessioni
  template:
    metadata:
      labels:
        app: instagnam
        service: postgres-connessioni
    spec:
      volumes:
      - name: data
        emptyDir: {}
      containers:
      - name: asw-postgres-connessioni
        image: postgres:9.6.5
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
              name: postgres-config
        ports:
          - containerPort: 5432
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/
---

apiVersion: v1
kind: Service
metadata:
  name: postgres-connessioni-service
  namespace: asw-project
spec:
  type: NodePort
  selector:
    app: instagnam
    service: postgres-connessioni
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres-ricette-seguite-deployment
  namespace: asw-project
  labels:
    app: instagnam
    service: postgres-ricette-seguite
spec:
  replicas: 1
  selector:
    matchLabels:
      app: instagnam
      service: postgres-ricette-seguite
  template:
    metadata:
      labels:
        app: instagnam
        service: postgres-ricette-seguite
    spec:
      volumes:
      - name: data-ricette-seguite
        emptyDir: {}
      containers:
      - name: asw-postgres-ricette-seguite
        image: postgres:9.6.5
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
              name: postgres-config-ricette-seguite
        ports:
        - containerPort: 5432
        
        volumeMounts:
        - name: data-ricette-seguite
          mountPath: /var/lib/postgresql/

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-ricette-seguite-service
  namespace: asw-project
spec:
  type: NodePort
  selector:
    app: instagnam
    service: postgres-ricette-seguite
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres-ricette-deployment
  namespace: asw-project
  labels:
    app: instagnam
    service: postgres-ricette
spec:
  replicas: 1
  selector:
    matchLabels:
      app: instagnam
      service: postgres-ricette
  template:
    metadata:
      labels:
        app: instagnam
        service: postgres-ricette
    spec:
      volumes:
      - name: data-ricette
        emptyDir: {}
      containers:
      - name: asw-postgres-ricette
        image: postgres:9.6.5
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
              name: postgres-config-ricette
        ports:
          - containerPort: 5432
        
        volumeMounts:
        - name: data-ricette
          mountPath: /var/lib/postgresql/

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-ricette-service
  namespace: asw-project
spec:
  type: NodePort
  selector:
    app: instagnam
    service: postgres-ricette
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
    
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: zookeeper-deployment
  namespace: asw-project
  labels:
    app: instagnam
    service: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: instagnam
      service: zookeeper
  template:
    metadata:
      labels:
        app: instagnam
        service: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: zookeeper
        imagePullPolicy: Always
        ports:
        - containerPort: 2181
        env:
        - name: ZOOKEEPER_ID
          value: "1"
        - name: ZOOKEEPER_SERVER_1
          value: zookeeper
          
---

apiVersion: v1
kind: Service
metadata:
  name: zoo1-service
  namespace: asw-project
spec:
  selector:
    app: instagnam
    service: zookeeper
  ports:
  - name: client
    protocol: TCP
    port: 2181
  - name: follower
    protocol: TCP
    port: 2888
  - name: leader
    protocol: TCP
    port: 3888
    
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kafka-broker-deployment
  namespace: asw-project
  labels:
    app: instagnam
    service: kafka
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: instagnam
        service: kafka
        id: "0"
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka
        imagePullPolicy: Always
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ADVERTISED_PORT
          #value: "30718"
          value: "9092"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: kafka-service.asw-project.svc.cluster.local
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo1-service.asw-project.svc.cluster.local:2181
        - name: KAFKA_BROKER_ID
          value: "0"
        - name: KAFKA_CREATE_TOPICS
          value: ricette-topic:2:1,connessioni-topic:2:1

---

apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: asw-project
  labels:
    app: instagnam
    service: kafka
spec:
  selector:
    app: instagnam
    service: kafka
    id: "0"
  type: LoadBalancer
  ports:
  - name: kafka-port
    protocol: TCP
    port: 9092
    
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: ricette-seguite-deployment
  namespace: asw-project
  labels:
    app: instagnam
    service: ricette-seguite
spec:
  replicas: 2
  selector:
    matchLabels:
      app: instagnam
      service: ricette-seguite
  template:
    metadata:
      labels:
        app: instagnam
        service: ricette-seguite
    spec:
      containers:
      - name: asw-ricette-seguite
        image: cmik/ricette-seguite:5.0.5
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
---

apiVersion: v1
kind: Service
metadata:
  name: ricette-seguite-service
  namespace: asw-project
spec:
  selector:
    app: instagnam
    service: ricette-seguite
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  
---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: connessioni-deployment
  namespace: asw-project
  labels:
    app: instagnam
    service: connessioni
spec:
  replicas: 2
  selector:
    matchLabels:
      app: instagnam
      service: connessioni
  template:
    metadata:
      labels:
        app: instagnam
        service: connessioni
    spec:
      containers:
      - name: asw-connessioni
        image: cmik/connessioni:5.0.5
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        
---

apiVersion: v1
kind: Service
metadata:
  name: connessioni-service
  namespace: asw-project
spec:
  selector:
    app: instagnam
    service: connessioni
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  
---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: ricette-deployment
  namespace: asw-project
  labels:
    app: instagnam
    service: ricette
spec:
  replicas: 2
  selector:
    matchLabels:
      app: instagnam
      service: ricette
  template:
    metadata:
      labels:
        app: instagnam
        service: ricette
    spec:
      containers:
      - name: asw-ricette
        image: cmik/ricette:5.0.5
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        
---

apiVersion: v1
kind: Service
metadata:
  name: ricette-service
  namespace: asw-project
spec:
  selector:
    app: instagnam
    service: ricette
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
 


